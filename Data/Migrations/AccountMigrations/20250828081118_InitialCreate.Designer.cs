// <auto-generated />
using System;
using DataBase.AccountDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Data.Migrations.AccountMigrations
{
    [DbContext(typeof(AccountDBContext))]
    [Migration("20250828081118_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DataBase.AccountDB.Account", b =>
                {
                    b.Property<long>("accountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("deviceId")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<int>("loginType")
                        .HasColumnType("int");

                    b.Property<int>("osType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("userId")
                        .HasColumnType("bigint");

                    b.HasKey("accountId");

                    b.HasIndex(new[] { "userId" }, "IX_ACCOUNT_USER_ID");

                    b.ToTable("account");
                });

            modelBuilder.Entity("DataBase.AccountDB.AccountLink", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("accessToken")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<long>("accountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("loginType")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "loginType", "accessToken" }, "IX_ACCOUNT_LINK_LOGIN_ACCESS");

                    b.HasIndex(new[] { "accountId" }, "IX_ACCOUNT_LINX_ACCOUNT_ID");

                    b.ToTable("accountlink");
                });
#pragma warning restore 612, 618
        }
    }
}
